syntax = "proto3";

option java_multiple_files = true;
option java_package = "dmlc.federated.xgboost";
option java_outer_classname = "XGBProto";
option objc_class_prefix = "XGB";

package xgbcomm;

service XgbService {
  rpc GetEncryptedGradPairs_ (stream GradPairsRequest) returns (stream GradPairsResponse) {}
  rpc GetEncryptedSplits_ (stream SplitsRequest) returns (stream SplitsResponse) {}

  rpc GetPubKey (Request) returns (PubKeyResponse) {}
  rpc GetEncryptedGradPairs (GradPairsRequest) returns (GradPairsResponse) {}
  rpc SendEncryptedSplits (SplitsRequest) returns (SplitsResponse) {}
  rpc IsSplitEntryValid (SplitEntryValidRequest) returns (SplitEntryValidResponse) {}
  rpc GetLeftRightNodeSize (Request) returns (BlockInfo) {}
  rpc SendLeftRightNodeSize (BlockInfo) returns (Response) {}
  rpc GetBlockInfo (Request) returns (BlockInfo) {}
  rpc SendBlockInfo (BlockInfo) returns (Response) {}
}

message Request {
  uint32 idx = 1;
}

message Response {}

message PubKeyResponse {
  uint32 nbits = 1;
  uint32 lbits = 2;
  MpzType n = 3;          // n=P*Q
  MpzType half_n = 4;     // plaintext domain for precomputing
  MpzType n_squared = 5;  // n=n^2
  MpzType h_s = 6;        // h_s=(-y^2b)^n mod n^2
  MpzType P_squared_mul_P_squared_inverse = 7;        // h_s=(-y^2b)^n mod n^2
  /* fixed-base parameters */
  FBInstance fb_mod_P_sqaured = 8;
  FBInstance fb_mod_Q_sqaured = 9;
}

message GradPairsRequest {
  uint32 version = 1;
}

message GradPairsResponse {
  uint32 version = 1;
  repeated GradPair encrypted_grad_pairs = 2;
}

message SplitsRequest {
  uint32 version = 1;
  uint32 nidx = 2;
  uint32 part_id = 3;
  repeated EncryptedSplit encrypted_splits = 4;
}

message SplitsResponse {
  uint32 version = 1;
  uint32 nidx = 2;
  string mask_id = 3;
  int32 d_step = 4;
  bool default_left = 5;
  uint32 part_id = 6;
}

message SplitEntryValidRequest {
  uint32 version = 1;
  uint32 nidx = 2;
  int32 num_leaves = 3;
}

message SplitEntryValidResponse {
  uint32 version = 1;
  bool is_valid = 2;
}

message EncryptedSplit {
  string mask_id = 1;
  GradPair left_sum = 2;
  GradPair right_sum = 3;
  int32 d_step = 4;
  bool default_left = 5;
  bool is_cat = 6;
}

message BlockInfo {
  uint32 idx = 1;
  uint32 n_left = 2;
  uint32 n_right = 3;
  uint32 n_offset_left = 4;
  uint32 n_offset_right = 5;
  repeated uint32 left_data_ = 6;
  repeated uint32 right_data_ = 7;
}

message MpzType {
  /* Number of *limbs* allocated and pointed to by the _mp_d field.  */
  int32 _mp_alloc = 1;
  /* abs(_mp_size) is the number of limbs the last field points to.
     If _mp_size is negative this is a negative number.  */
  int32 _mp_size = 2;
  /* Pointer to the limbs.  */
  repeated uint64 _mp_d = 3;
}

message GradPair {
  MpzType grad = 1;
  MpzType hess = 2;
}

message FBInstance {
  MpzType m_mod = 1;
  repeated MpzType m_table_G = 2;
  uint32 m_h = 3;
  uint32 m_t = 4;
  uint32 m_w = 5;
}
